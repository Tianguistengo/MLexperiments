Part of the problem is a bottleneck at the heart of traditional sensors, which capture a huge amount of visual data, 
regardless of whether or not it is useful for classifying an image. Crunching all that data slows things down.

--------------------http://szeliski.org/Book/

-In Image processing, *blob detection* refers to modules that are aimed at detecting points and/or regions in the image 
that differ in properties like 
brightness or color compared to the surrounding.
... It is used to obtain regions of interest for further processing.

-Pyramid, or pyramid representation, is a type of multi-scale signal representation developed by the computer vision, 
image processing and signal processing communities, in which a signal or an image is subject to 
repeated smoothing and subsampling. 
Pyramid representation is a predecessor to scale-space representation and multiresolution analysis. 

Stereo matching is the process of taking two or more images and estimating a 3D model of the scene 
by finding matching pixels in the images and converting their 2D positions into 3D depths.



-"For many applications of image processing, color information doesn't help us
identify important edges or other features." exceptions apply (for faces, colour usually is a good indicator, apparently).

-Thresholding (separating between foreground and background) is the simplest method of image segmentation.
+ You should use local thresholding instead of global if the image has a wide variation of background intensity.
+As we saw in the video, not being sure about what thresholding method to use isn't a problem.
In fact, scikit-image provides us with a function (from skimage.filters import try_all_threshold)
to check multiple methods and see 
for ourselves what the best option is. 
It returns a figure comparing the outputs of different global thresholding methods.

-A Gaussian filter can blur an image to reduce noise and improve the likelihood of detecting something specific 
(e.g. edges, pero no creo que aplique a todo).

