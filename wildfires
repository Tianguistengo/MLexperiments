
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import seaborn as sns
%matplotlib inline

np.random.seed(2)

from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
import itertools

from keras.utils.np_utils import to_categorical # convert to one-hot-encoding
from keras.models import Sequential
from keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D
from keras.optimizers import RMSprop
from keras.preprocessing.image import ImageDataGenerator
from keras.callbacks import ReduceLROnPlateau


sns.set(style='white', context='notebook', palette='deep')



# example for Modis" 

var dataset = ee.ImageCollection('MODIS/006/MOD14A1')
                  .filter(ee.Filter.date('2018-01-01', '2018-05-01'));
var fireMaskVis = {
  min: 0.0,
  max: 6000.0,
  bands: ['MaxFRP', 'FireMask', 'FireMask'],
};
Map.setCenter(6.746, 46.529, 2);
Map.addLayer(dataset, fireMaskVis, 'Fire Mask');



# conv net architecture example [[Conv2D->relu]*2 -> MaxPool2D -> Dropout]*2 -> Flatten -> Dense -> Dropout -> Out

model = Sequential()

model.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', 
                 activation ='relu', input_shape = (28,28,1)))
model.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', 
                 activation ='relu'))
model.add(MaxPool2D(pool_size=(2,2)))
model.add(Dropout(0.25))


model.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', 
                 activation ='relu'))
model.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', 
                 activation ='relu'))
model.add(MaxPool2D(pool_size=(2,2), strides=(2,2)))
model.add(Dropout(0.25))


model.add(Flatten())
model.add(Dense(256, activation = "relu"))
model.add(Dropout(0.5))
model.add(Dense(10, activation = "softmax"))




databases:

- "The MOD14A1 V6 dataset provides daily fire mask composites at 1km resolution derived from the
MODIS 4- and 11-micrometer radiances. The fire detection strategy is based on absolute detection of a
fire (when the fire strength is sufficient to detect), and on detection relative to its background 
(to account for variability of the surface temperature and reflection by sunlight). 
The product distinguishes between fire, no fire and no observation.

goals:

1. How to anticipate them  , hot spots and other methods // Early warning systems

2. How to predict which ones will grow out of control

3. How to put them off
3.1 How to treat a very hot spot in the brink of sparking into fire.

4. Analyze how far the "preventive" strategy would allow us to go (recognize hot spots 
well before they turn into fires)

4.Â¿Build a CNN to recognize near-real time satellite data -->>>-early wildfire recognition system?

5.What other sensors/databases could feed this model?  what ensemble of sensors from dif earth factors

6. Which satellites are useful?  MODIS, VIIRS, LANCE suite

7.Analyze ensemble models in themselves

8.Automate recogniction after threshold of fire index surpassed

projects working on it:

1. terrafuse.ai
2. http://www.wildfireaware.co.uk/about/

read more about:

1. The super gels to enclose fire and not let it go out. How to apply them.
aka optimze firelining and backing and other response methods.  Gels could be preventive and responsive.

2. Drones vs planes

3.http://www.publish.csiro.au/wf/WF19023  
RESEARCH ARTICLE (Open Access)
Machine learning to predict final fire size at the time of ignition

4. example of convolutional network used in alaska https://www.osti.gov/servlets/purl/1491321

considerations:

1. "It's important to strike a balance between properties and adjust it to your problem. 
Some these are: spatial resolution, temporal resolution, spectral resolution, availability,
cost, ease of processing".

2. "The holy grail is that firefighters want to be able to get on a fire in the first few hours or even within the first hour 
so they can take action to put it out, sayd vince ambosia, a wildires remoste.sensitst scientist at NASA Ames, so its critical 
to have repeatable coverage" 



 URLs:

https://firms.modaps.eosdis.nasa.gov/active_fire/#firms-txt

https://www.sciencedirect.com/science/article/abs/pii/S0379711218303941

https://blogs.ei.columbia.edu/2019/07/10/big-data-machine-learning-wildfires/

https://venturebeat.com/2019/09/18/researchers-use-machine-learning-to-predict-large-wildfires/

https://pdfs.semanticscholar.org/2ff9/baebec00ed50c5568d31aa475075b49c2efb.pdf

https://hal.archives-ouvertes.fr/hal-01560570/document
